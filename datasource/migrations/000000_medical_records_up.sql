-- Create ENUM type for users table
CREATE TYPE user_gender_enum AS ENUM ('MALE', 'FEMALE');
CREATE TYPE user_type_enum AS ENUM ('PATIENT', 'DOCTOR');

-- Create users table
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    phone VARCHAR(20) NOT NULL,
    password VARCHAR(255) NOT NULL,
    type user_type_enum NOT NULL,
    gender user_gender_enum NOT NULL,
    image_url TEXT,
    identity_number VARCHAR(50) NOT NULL,
    date_of_birth DATE,
    place_of_birth VARCHAR(255),
    address TEXT,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Create health_services table
CREATE TABLE health_services (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    image_url TEXT,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

-- Create doctors table 
CREATE TABLE doctors (
    id SERIAL PRIMARY KEY,
    health_service_id INT NOT NULL,
    user_id INT NOT NULL,
    available_schedule JSONB NOT NULL,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (health_service_id) REFERENCES health_services(id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Structure of available_schedule JSONB
-- {
--     "sunday": ["08:00", "10:00", "12:00", "14:00", "16:00"],
--     "monday": ["08:00", "10:00", "12:00", "14:00", "16:00"],
--     "tuesday": ["08:00", "10:00", "12:00", "14:00", "16:00"],
-- }

-- create patients table
CREATE TABLE patients (
    id SERIAL PRIMARY KEY,
    user_id INT NOT NULL,
    height DECIMAL(5,2),
    weight DECIMAL(5,2),
    allergies TEXT[],
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Create ENUM type for appointment_status
CREATE TYPE appointment_status AS ENUM ('WAITING', 'UPCOMING', 'DONE', 'CANCELLED', 'REJECTED');

-- Create appointments table
CREATE TABLE appointments (
    id SERIAL PRIMARY KEY,
    record_number VARCHAR(100) NOT NULL,
    doctor_id INT NOT NULL,
    patient_id INT NOT NULL,
    symptoms TEXT,
    status appointment_status NOT NULL,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (doctor_id) REFERENCES doctors(id),
    FOREIGN KEY (patient_id) REFERENCES patients(id)
);

-- Create medical_records_accesses table
CREATE TABLE medical_record_accesses (
    id SERIAL PRIMARY KEY,
    doctor_id INT NOT NULL,
    patient_id INT NOT NULL,
    appointment_id INT NOT NULL,
    access_key TEXT NOT NULL,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (doctor_id) REFERENCES doctors(id),
    FOREIGN KEY (patient_id) REFERENCES patients(id),
    FOREIGN KEY (appointment_id) REFERENCES appointments(id)
);

-- access key is for patient to give access to doctor to view their medical records
-- it will be generated by patient and given to doctor
